# Rime schema
# encoding: utf-8
# https://github.com/u1805/rime

schema:
  schema_id: flypy_flypy
  name: 小鹤双拼
  version: "2025-03-01"
  author:
    - Functoreality
    - Dvel
    - gaboolic （裁缝)
    - amzxyz
    - Modified by dai0v0
  description: |
    小鹤双拼+辅助码 https://github.com/gaboolic/rime-shuangpin-fuzhuma
    改用万象词库
  dependencies:
    - stroke
    - radical_pinyin
    - emojis
    - melt_eng
    - japanese
    - pinyin_simp

switches:
  - name: ascii_mode
    states: [ 中, 英 ]
  - name: ascii_punct  # 中英标点
    states: [ ¥, $ ]
  - name: full_shape
    states: [ 半, 全 ]
  - name: traditionalization
    states: [ 简, 繁 ]
  - name: emoji
    states: [ 💀, 😄 ]
  - name: mars
    reset: 0
    states: [ 地, 煋 ] #火星文
  - name: others
    reset: 1
  - name: tone_display
    states: [ 调, 音 ]
  - name: fuzhu_switch
    states: [ 助, 辅 ]
    reset: 1

engine:
  processors:
    - lua_processor@*wanxiang/quick_symbol_text    # 快符引导以及重复上屏
    - lua_processor@*moqi/key_binder               # 绑定按键扩展能力match
    - lua_processor@*crane/shortcut_processor      # 小鹤直通车
    - lua_processor@*cloud/baidu_processor         # 云输入
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@radical_lookup  # 部件拆字自定义 tag
    - affix_segmentor@reverse_stroke  # 笔画反查
    - punct_segmentor
    - affix_segmentor@emojis
    - affix_segmentor@pinyin
    - affix_segmentor@melt_eng
    - affix_segmentor@japanese
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - table_translator@melt_eng_in_cn
    - table_translator@custom_phrase_xh
    - table_translator@custom_phrase_kf
    - table_translator@custom_phrase_xhzg
    - table_translator@custom_phrase_super_1jian
    - table_translator@custom_phrase_super_2jian
    - table_translator@custom_phrase_super_3jian
    - table_translator@radical_lookup        # 部件拆字反查
    - table_translator@reverse_stroke        # 笔画反查
    - script_translator
    - script_translator@pinyin
    - script_translator@emojis               # 临时 emoji 输入
    - script_translator@melt_eng             # 临时单词输入
    - script_translator@japanese             # 临时日语输入
    - lua_translator@*melt
    - lua_translator@*wanxiang/shijian       # 时间、日期、星期、农历、节气、时辰等等
    # - lua_translator@*ice/date_translator    # 时间、日期、星期
    # - lua_translator@*ice/lunar              # 农历
    - lua_translator@*ice/unicode            # Unicode
    - lua_translator@*ice/number_translator  # 数字、金额大写
    - lua_translator@*moqi/calculator        # 计算器
    - lua_translator@*crane/shortcut_translator  # 小鹤直通车
    - lua_translator@*cloud/baidu_translator # 云输入
    - lua_translator@*wanxiang/force_gc      # 暴力 GC 降低内存
  filters:
    - lua_filter@*ice/long_word_filter       # 长词优先（顺序要求：长词优先 > Emoji）
    - lua_filter@*ice/autocap_filter         # 英文自动大写
    - lua_filter@*moqi/reduce_emoji_filter   # 按需启用，作用是降低Emoji在候选项中的位置排序(顺序要求：Emoji > 降低排序)
    - reverse_lookup_filter@radical_reverse_lookup  # 部件拆字滤镜，放在pro_comment_format前面，进一步被超级注释处理以获得拼音编码+辅助码的提示
    - lua_filter@*wanxiang/pro_preedit_format      #输入码显示全拼并带上音调
    - simplifier@traditionalize                    # 简繁切换
    - simplifier@mars                              # 火星文
    - simplifier@emoji                             # Emoji
    - simplifier@chinese_english                   # 中英词典
    - simplifier@others                            # 月份星期/符号/部首/人名/生僻字...
    - lua_filter@*ice/is_in_user_dict              # 用户词典的词加上一个*
    # - lua_filter@*wanxiang/en_spacer               #启用时中文状态下输入英文单词后面自动追加空格
    - lua_filter@*wanxiang/pro_comment_format      # 超级注释模块，支持错词提示、辅助码显示，部件组字读音注释，支持个性化配置和关闭相应的功能
    - lua_filter@*moqi/stick                       # tab置顶词回显在第一个comment中
    - lua_filter@*auxcode/aux_code@flyup_aux_code  # 整句辅助码
    - uniquifier

# 标点符号
punctuator:
  import_preset: symbols

#语言模型
# grammar:
#   language: zh-hans-t-essay-bgw
__include: octagram   #启用语言模型
octagram:
  __patch:
    grammar:
      language: wanxiang-lts-zh-hans
      collocation_max_length: 8         #命中的最长词组
      collocation_min_length: 2         #命中的最短词组，搭配词频健全的词库时候应当最小值设为3避开2字高频词
      collocation_penalty: -10          #默认-12 对常见搭配词组施加的惩罚值。较高的负值会降低这些搭配被选中的概率，防止过于频繁地出现某些固定搭配。
      non_collocation_penalty: -12      #默认-12 对非搭配词组施加的惩罚值。较高的负值会降低非搭配词组被选中的概率，避免不合逻辑或不常见的词组组合。
      weak_collocation_penalty: -24     #默认-24 对弱搭配词组施加的惩罚值。保持默认值通常是为了有效过滤掉不太常见但仍然合理的词组组合。
      rear_penalty: -30                 #默认-18 对词组中后续词语的位置施加的惩罚值。较高的负值会降低某些词语在句子后部出现的概率，防止句子结构不自然。
    translator/contextual_suggestions: false
    translator/max_homophones: 5
    translator/max_homographs: 5


################################## 方案组合 #############################

set_shuru_schema:           #配置此项就是选择什么输入法,同时拆分反查和中英文混输也将匹配该输入方案
  __include: wanxiang:/algebra_flypy  #可选解码规则有   algebra_pinyin, algebra_zrm, algebra_flypy,  algebra_ziguang, algebra_sogou, algebra_mspy, algebra_abc  选择一个填入
set_algebra_fuzhu:          #配置此项就是选择什么辅助码
  __include: wanxiang:/fuzhu_flypy    #可选辅助码有：fuzhu_kong，fuzhu_moqi, fuzhu_zrm, fuzhu_flypy, fuzhu_tiger, fuzhu_cj, fuzhu_wubi, fuzhu_jdh, fuzhu_hanxin 选择一个填入
pro_comment_format:            # 超级注释模块，子项配置 true 开启，false 关闭
  fuzhu_code: true             # 启用辅助码提醒，用于辅助输入练习辅助码，成熟后可关闭
  candidate_length: 1          # 候选词辅助码提醒的生效长度，0为关闭  但同时清空其它，应当使用上面开关来处理    
  fuzhu_type: flypy            # 用于匹配对应的辅助码注释显示，基于默认词典的可选注释类型有：( moqi, flypy, zrm, jdh, cj, tiger, wubi, hanxin) tone (这个参数特殊，在注释里显示声调，不算辅助码，也填入此处)选择一个填入，之所以单独列出是因为这里有更多的可配置性，而真正的辅助码默认只有8种
  corrector_type: "{comment}"  # 换一种显示类型，比如"({comment})" 

speller:
  # 三字母及以上唯一码直接上屏
  auto_select: false
  auto_select_pattern: ^[a-z]+/|^[a-df-zA-DF-Z]\w{2,}|^e\w{3,} 
  # 如果不想让什么标点直接上屏，可以加在 alphabet，或者编辑标点符号为两个及以上的映射
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA/`;'
  # initials 定义仅作为始码的按键，排除 ` 让单个的 ` 可以直接上屏
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA/
  # 第一位<空格>是拼音之间的分隔符；第二位<'>表示可以手动输入单引号来分割拼音。
  delimiter: " "
  algebra:
    __patch:
      - set_shuru_schema     #拼音转双拼码
      - wanxiang:/mohuyin    #模糊音选择性开启
      - set_algebra_fuzhu    #辅助码部分
      - wanxiang:/wannengma  #万能码选择性开启

################################## 快捷键触发 #############################

# Emoji
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false  # 在 corrector.lua 及反查中，emoji 返回空注释

# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2tw.json  # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: char                # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换# 火星文切换

# 火星文切换
mars:
  opencc_config: martian.json 
  option_name: mars

#中文转英文
chinese_english:
  option_name: chinese_english
  opencc_config: chinese_english.json
  tips: all
  comment_format:
    - "xform/-/ /"

# Ohters
others:
  option_name: others
  opencc_config: others.json

# 按键绑定
key_binder:
  import_preset: default
  aux_code_trigger: ";"   # 辅码引导符，要添加到 speller/alphabet
  bindings:
    - { when: always, accept: Control+1, toggle: emoji }              # 切换是否显示 Emoji
    - { when: always, accept: Control+2, toggle: traditionalization } # 切换简繁
    - { when: always, accept: Control+3, toggle: chinese_english }    # 中英互译
    - { when: has_menu, accept: "Control+4", toggle: "tone_display" }
    - { when: has_menu, accept: "Control+5", toggle: fuzhu_switch }
    # - { when: has_menu, accept: semicolon, send: 2 }
    # - { when: has_menu, accept: slash, send: 3 }
    - { when: has_menu, accept: "Tab", send: "Control+Right" }           # 使用 tab 在不同音节之间跳转
    - { when: composing, accept: "Tab", send: "Control+Right" }
    - { when: has_menu, accept: "Shift_L+Tab", send: "Control+Left" }    # 使用 tab 在不同音节之间跳转
    - { when: composing, accept: "Shift_L+Tab", send: "Control+Left" }
    - { match: "[a-z]{1,4}", accept: backslash,  send_sequence: "/1" }   # 简拼

################################## 前缀触发 #############################

radical_lookup:
  tag: radical_lookup
  dictionary: radical_pinyin # https://github.com/mirtlecn/rime-radical-pinyin
  enable_completion: true
  prefix: "az"
  suffix: "'"
  tips: 〔部件组字〕
  preedit_format:
    - erase/^.*$//

reverse_stroke:
  tag: reverse_stroke
  dictionary: stroke # stroke
  enable_completion: true
  prefix: "ab"
  suffix: "'"
  tips: 〔笔画hspnz〕 # 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/

# 部件拆字滤镜
radical_reverse_lookup:
  tags: [ radical_lookup,reverse_stroke ]
  overwrite_comment: true
  dictionary: wanxiang #带音调的词典

emojis:
  tag: emojis
  dictionary: emojis
  enable_completion: true
  prefix: "ae"
  suffix: "'"
  tips: "〔Emoji〕"

melt_eng:
  tag: melt_eng
  dictionary: melt_eng
  enable_completion: true
  enable_sentence: false
  prefix: "aw"
  # suffix: "'"
  tips: "〔英文〕"
  spelling_hints: 5
  comment_format:
    - xform/^.+$//

japanese:
  tag: japanese
  dictionary: japanese
  enable_completion: false
  enable_sentence: true
  prefix: "aj"
  # suffix: "'"
  tips: "〔日文〕"
  spelling_hints: 5
  comment_format:
    - xform/^.+$//

pinyin:
  tag: pinyin
  prism: pinyin_simp
  dictionary: wanxiang 
  enable_completion: false
  enable_sentence: true
  prefix: "ap"
  suffix: "'"
  tips: "〔全拼〕"

recognizer:
  import_preset: default
  patterns:
    punct: "^//?([0-9]0?|[A-Za-z]+)$" # 响应 symbols.yaml 内的输入
    ## 拆字、笔画:
    radical_lookup: "^az[a-z]*'?$" # "[[]b[a-z]*'?$"
    reverse_stroke: "^ab[A-Za-z]*$"
    ## 临时输入
    emojis: "^ae[a-z]*'?$"
    melt_eng: "^aw[A-Za-z]*"
    japanese: "^aj[a-z]*"
    pinyin: "^ap[a-z]*'?$"
    ## 功能
    calculator: "^V.*$"                 # 计算器需要用
    unicode: "^U[a-f0-9]+"              # 响应 lua_translator@unicode，输出 Unicode 字符
    number: "^R[0-9]+[.]?[0-9]*"        # 响应 lua_translator@number_translator，数字金额大写
    gregorian_to_lunar: "^N[0-9]{1,8}"  # 响应 lua_translator@lunar，公历转农历，输入 N20240115 得到「二〇二三年腊月初五」
    quick_symbol: "^'.*$"               # 快符引导，例如输入'q 后自动上屏快速符号，双击''重复上屏符号
    quick_text: "^;.*$"                 # 双击;;重复上屏汉字和字母

################################## 词库词典 #############################

translator:
  dictionary: wanxiang          # 挂载词库 wanxiang.dict.yaml
  prism: flypy_flypy            # 多方案共用一个词库时，为避免冲突，需要用 prism 指定一个名字。
  contextual_suggestions: true   #上下文建议开启〔需配合 grammar 使用〕
  prioritize_quality: true  # 启用优先质量选项
  enable_completion: true  # 启用候选词补全
  max_candidates: 10  # 设置最大候选词数量
#  punctuation_model: default  # 设置标点符号模型
#  single_char_first: true  # 优先显示单个字符
#  candidate_filter: "^(?!abc).*$"  # 过滤掉包含 "abc" 的候选词
#  user_dict: zrm.userdb  # 用户词典的文件名称
#  db_class: tabledb  #开启后就不会产生zrm.userdb这样的文件夹，会直接输出文本zrm.txt同时无法使用同步能力

  enable_correction: false       #是否开启自动纠错
  encode_commit_history: true    # 预留历史上屏自动编码成词
  spelling_hints: 50             # 将注释以词典字符串形式完全暴露，通过pro_comment_format.lua完全接管，灵活配置。
  always_show_comments: true     # Rime 默认在 preedit 等于 comment 时取消显示 comment，这里强制一直显示，供pro_comment_format.lua做判断用。
  comment_format: {comment}      #将注释以词典字符串形式完全暴露，通过pro_comment_format.lua完全接管，灵活配置。
  preedit_format:                # preedit_format 影响到输入框的显示和“Shift+回车”上屏的字符
    - xform/([a-z][a-z][a-z][a-z])o/$1°/

  enable_user_dict: true # 是否开启自动调频
  initial_quality: 1.2   # 拼音权重 1.2

# 自定义词库
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: true
  initial_quality: 99

melt_eng_in_cn:
  dictionary: melt_eng
  enable_sentence: false   # 禁止造句
  enable_user_dict: false  # 禁用用户词典
  initial_quality: 1.1     # 英文权重 1.1
  comment_format:          # 自定义提示码
    - xform/.*//           # 清空提示码（就是没有那个小尾巴）

# 小鹤简码
custom_phrase_xh:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_xh
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 99

# 小鹤快符
custom_phrase_kf:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_kf
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 小鹤字根
custom_phrase_xhzg:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_xhzg
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 1码
custom_phrase_super_1jian:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_super_1jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 2码
custom_phrase_super_2jian:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_super_2jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 3码
custom_phrase_super_3jian:
  dictionary: ""
  user_dict: jm_dicts/custom_phrase_super_3jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后