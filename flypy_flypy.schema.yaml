# Rime schema
# encoding: utf-8
# https://github.com/u1805/rime

schema:
  schema_id: flypy_flypy
  name: 小鹤双拼
  version: "2024-07-24"
  author:
    - Functoreality
    - Dvel
    - gaboolic （裁缝)
    - Modified by dai0v0
  description: |
    小鹤双拼+辅助码 https://github.com/gaboolic/rime-shuangpin-fuzhuma
    稍微的改了一下（小声
  dependencies:
    - stroke
    - radical_flypy
    - emoji
    - melt_eng
    - japanese
    - pinyin_simp

switches:
  - name: ascii_mode
    states: [ 文, A ]
  - name: full_shape
    states: [ $, ￥ ]
  - name: traditionalization
    states: [ 简, 繁 ]
  - name: emoji
    reset: 0 # 默认状态: 0 关闭 1 开启
    states: [ 💀, 😄 ]
  - name: mars
    reset: 0
    states: [ 地, 煋 ] #火星文
  - name: others
    reset: 1
  # - name: ascii_punct
  #   states: [ 。，, ．， ]

engine:
  processors:
    - lua_processor@*key_binder # 绑定按键match
    - lua_processor@*xhup/shortcut_processor
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - affix_segmentor@emojis
    - affix_segmentor@pinyin
    - affix_segmentor@melt_eng
    - affix_segmentor@japanese
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@my_custom_phrase
    - table_translator@melt_eng_in_cn
    - table_translator@custom_phrase
    - table_translator@custom_phrase_kf
    - table_translator@custom_phrase_xhzg
    - table_translator@custom_phrase_super_1jian
    - table_translator@custom_phrase_super_2jian
    - table_translator@custom_phrase_super_3jian
    - table_translator@custom_phrase_super_3jian_no_conflict
    - table_translator@custom_phrase_super_4jian_no_conflict
    - reverse_lookup_translator
    - reverse_lookup_translator@reverse_stroke
    - script_translator
    - script_translator@pinyin
    - script_translator@emojis           # 添加注释后：停用ae模式emoji输入
    - script_translator@melt_eng         # 添加注释后：停用单词输入
    - script_translator@japanese         # 添加注释后：停用日语输入
    - lua_translator@*melt
    - lua_translator@*date_translator    # 时间、日期、星期
    - lua_translator@*lunar              # 农历
    - lua_translator@*unicode            # Unicode
    - lua_translator@*number_translator  # 数字、金额大写
    - lua_translator@*calculator         # 计算器
    - lua_translator@*xhup/shortcut_translator  # Lua 直通车
  filters:
    - lua_filter@*laneChangeAndSpace_Filter  # 把<br>替换为换行
    - lua_filter@*is_in_user_dict            # 用户词典的词加上一个*
    - lua_filter@*stick                      # tab置顶词回显在第一个comment中
    - lua_filter@*long_word_filter           # 长词优先（顺序要求：长词优先 > Emoji）
    - lua_filter@*autocap_filter             # 英文自动大写
    - simplifier@emoji                       # Emoji
    - lua_filter@*reduce_emoji_filter        # 按需启用，作用是降低Emoji在候选项中的位置排序(顺序要求：Emoji > 降低排序)
    - simplifier@chinese_english             # 中英词典
    - simplifier@traditionalize              # 简繁切换
    - simplifier@mars                        # 火星文
    - simplifier@others                      # 月份星期/符号/部首/人名/生僻字...
    - uniquifier

# Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
date_translator:
  date: date            # 日期： 2022-11-29
  time: time            # 时间： 18:13
  week: week            # 星期： 星期二
  datetime: datetime    # ISO 8601： 2022-11-29T18:13:11+08:00
  timestamp: timestamp  # 时间戳： 1669716794
  month: month          # 月份： June/Jun

melt:
  uuid: uuid

# Lua 配置：农历的触发关键字
lunar: lunar  # 农历： 二〇二三年冬月二十 癸卯年（兔）冬月二十
# Lua 配置：长词优先
# 提升 count 个词语，插入到第 idx 个位置。
# 示例：将 2 个词插入到第 1  个候选项，输入 总算 得到「1总算 2纵」
long_word_filter:
  count: 2
  idx: 1

speller:
  # 如果不想让什么标点直接上屏，可以加在 alphabet，或者编辑标点符号为两个及以上的映射
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA/`;
  # initials 定义仅作为始码的按键，排除 ` 让单个的 ` 可以直接上屏
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA/
  # 第一位<空格>是拼音之间的分隔符；第二位<'>表示可以手动输入单引号来分割拼音。
  delimiter: " '"
  algebra:
    # 日语长音促音规则
    - 'derive/_/x/'
    - 'derive/-/q/'
  
    - derive/^(\w\w);(\w)(\w)$/$1$2`/  # ABC`
    - derive/^(\w\w);(\w)(\w)$/$1`$3/  # AB`D
    - derive/^(\w\w);(\w)(\w)$/$1``/   # AB``
    # - derive/^(\w\w);(\w)(\w)$/``$2$3/  # ``CD
    
    # 模糊音 可选择性开启
    # - derive/^z([a-z])/v$1/
    # - derive/^c([a-z])/i$1/
    # - derive/^s([a-z])/u$1/
    # - derive/^v([a-z])/z$1/
    # - derive/^i([a-z])/c$1/
    # - derive/^u([a-z])/s$1/

    - derive/^(..)[;].+$/$1/
    - derive/^(..[;].).+$/$1/
    # - derive/^([jqxy])u/$1v/
    - derive/[;]//

translator:
  dictionary: flypy_flypy
  enable_completion: false
  ##  默认为不超过 2 个字的候选项显示输入码；将 2 改为 0 可关闭编码提示，
  ##  改为 1 则是只显示单字的输入码，依此类推。
  spelling_hints: 1
  comment_format:
    - "xform/(^|[ '])[^;]+[;]/$1/" ## 编码提示只显示辅助码部分

  enable_user_dict: true # 是否开启自动调频
  initial_quality: 1.2  # 拼音权重 1.2

# 自定义词库
my_custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: true
  initial_quality: 1

melt_eng_in_cn:
  dictionary: melt_eng
  enable_sentence: false   # 禁止造句
  enable_user_dict: false  # 禁用用户词典
  initial_quality: 1.1     # 英文权重 1.1
  comment_format:          # 自定义提示码
    - xform/.*//           # 清空提示码（就是没有那个小尾巴）

grammar:
  language: zh-hans-t-essay-bgw

reverse_lookup:
  dictionary: radical_flypy # https://github.com/mirtlecn/rime-radical-pinyin
  enable_completion: true
  prefix: "az"
  suffix: "'"
  tips: 〔部件组字〕
  preedit_format:
    # - xlit/hspnz/一丨丿丶乙/

reverse_stroke:
  tag: reverse_stroke
  dictionary: stroke # stroke
  enable_completion: true
  prefix: "ab"
  suffix: "'"
  tips: 〔笔画hspnz〕 # 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/

# Emoji
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false  # 在 corrector.lua 及反查中，emoji 返回空注释

# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2tw.json  # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: char               # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换# 火星文切换

# 火星文切换
mars:
  opencc_config: martian.json 
  option_name: mars

#中文转英文
chinese_english:
  option_name: chinese_english
  opencc_config: chinese_english.json
  tips: char
  comment_format:
    - "xform/-/ /"

# Ohters
others:
  option_name: others
  opencc_config: others.json

# 标点符号
punctuator:
  import_preset: symbols

# 按键绑定
key_binder:
  import_preset: default
  bindings:
    - { when: always, accept: Control+1, toggle: emoji }              # 切换是否显示 Emoji
    - { when: always, accept: Control+2, toggle: traditionalization } # 切换简繁
    - { when: always, accept: Control+3, toggle: chinese_english }    # 中英互译
    # - { when: has_menu, accept: semicolon, send: 2 }
    # - { when: has_menu, accept: slash, send: 3 }
    - { match: "[a-z]{1,3}", accept: Tab,  send_sequence: "/1" }      # 简拼

recognizer:
  # import_preset: default
  patterns:
    punct: "^/([0-9]0?|[A-Za-z]+)$" # 响应 symbols.yaml 内的输入
    ## 拆字、笔画:
    reverse_lookup: "^az[a-z]*'?$" # "[[]b[a-z]*'?$"
    reverse_stroke: "^ab[A-Za-z]*$"
    ## 临时输入
    emojis: "^ae[a-z]*'?$"
    melt_eng: "^aw[A-Za-z]*"
    japanese: "^aj[a-z]*"
    pinyin: "^ap[a-z]*'?$"
    ## 功能
    calculator: "^V.*$"                 # 计算器需要用
    unicode: "^U[a-f0-9]+"              # 脚本将自动获取第 2 个字符 U 作为触发前缀，响应 lua_translator@unicode，输出 Unicode 字符
    number: "^R[0-9]+[.]?[0-9]*"        # 脚本将自动获取第 2 个字符 R 作为触发前缀，响应 lua_translator@number_translator，数字金额大写
    gregorian_to_lunar: "^N[0-9]{1,8}"  # 脚本将自动获取第 2 个字符 N 作为触发前缀，响应 lua_translator@lunar，公历转农历，输入 N20240115 得到「二〇二三年腊月初五」

################################## 功能词典 #############################
emojis:
  tag: emojis
  dictionary: emoji
  enable_completion: true
  prefix: "ae"
  suffix: "'"
  tips: "〔Emoji〕"

melt_eng:
  tag: melt_eng
  dictionary: melt_eng
  enable_completion: true
  enable_sentence: false
  prefix: "aw"
  # suffix: "'"
  tips: "〔英文〕"
  spelling_hints: 5
  comment_format:
    - xform/^.+$//

japanese:
  tag: japanese
  dictionary: japanese
  enable_completion: false
  enable_sentence: true
  prefix: "aj"
  # suffix: "'"
  tips: "〔日文〕"
  spelling_hints: 5
  comment_format:
    - xform/^.+$//

pinyin:
  tag: pinyin
  prism: pinyin_simp
  dictionary: pinyin_simp 
  enable_completion: false
  enable_sentence: true
  prefix: "ap"
  suffix: "'"
  tips: "〔全拼〕"

################################## 简码词典 #############################
# 小鹤简码
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

# 小鹤快符
custom_phrase_kf:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase_kf
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 小鹤字根
custom_phrase_xhzg:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase_xhzg
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 1码
custom_phrase_super_1jian:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase_super_1jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 2码
custom_phrase_super_2jian:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase_super_2jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后

# 超强tab 3码
custom_phrase_super_3jian:
  dictionary: ""
  user_dict: custom_phrase/custom_phrase_super_3jian
  db_class: stabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: -1 #本表词和系统词重码居后